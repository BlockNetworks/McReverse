/*
 * Auto-generated by Frida. Please modify to match the signature of _ZZN3mce21SimpleResourceTrackerINSt6__ndk110shared_ptrINS_21ResourceBlockTemplateIN6nonstd8variants7variantINS5_9monostateENS_6BufferENS_21ClientResourcePointerINS_15ResourcePointerIN6dragon4mesh28ResolvedVertexBufferResourceENS3_ISD_NS_22UncheckedHandleTrackerENSB_17BufferDescriptionEEES2_EEEENS9_INSA_INSC_27ResolvedIndexBufferResourceENS3_ISJ_SE_SF_EES2_EEEENS5_6detail2TXINSN_2S4EEENSO_INSN_2S5EEENSO_INSN_2S6EEENSO_INSN_2S7EEENSO_INSN_2S8EEENSO_INSN_2S9EEENSO_INSN_3S10EEENSO_INSN_3S11EEENSO_INSN_3S12EEENSO_INSN_3S13EEENSO_INSN_3S14EEENSO_INSN_3S15EEEEENS_21PerFrameHandleTrackerESF_EEEENS1_8weak_ptrIS1F_EEE19resetValidityChecksEvENKUlRS1I_E_clES1K_.
 * This stub is currently auto-generated from manpages when available.
 *
 * For full API reference, see: https://frida.re/docs/javascript-api/
 */

{
  /**
   * Called synchronously when about to call _ZZN3mce21SimpleResourceTrackerINSt6__ndk110shared_ptrINS_21ResourceBlockTemplateIN6nonstd8variants7variantINS5_9monostateENS_6BufferENS_21ClientResourcePointerINS_15ResourcePointerIN6dragon4mesh28ResolvedVertexBufferResourceENS3_ISD_NS_22UncheckedHandleTrackerENSB_17BufferDescriptionEEES2_EEEENS9_INSA_INSC_27ResolvedIndexBufferResourceENS3_ISJ_SE_SF_EES2_EEEENS5_6detail2TXINSN_2S4EEENSO_INSN_2S5EEENSO_INSN_2S6EEENSO_INSN_2S7EEENSO_INSN_2S8EEENSO_INSN_2S9EEENSO_INSN_3S10EEENSO_INSN_3S11EEENSO_INSN_3S12EEENSO_INSN_3S13EEENSO_INSN_3S14EEENSO_INSN_3S15EEEEENS_21PerFrameHandleTrackerESF_EEEENS1_8weak_ptrIS1F_EEE19resetValidityChecksEvENKUlRS1I_E_clES1K_.
   *
   * @this {object} - Object allowing you to store state for use in onLeave.
   * @param {function} log - Call this function with a string to be presented to the user.
   * @param {array} args - Function arguments represented as an array of NativePointer objects.
   * For example use args[0].readUtf8String() if the first argument is a pointer to a C string encoded as UTF-8.
   * It is also possible to modify arguments by assigning a NativePointer object to an element of this array.
   * @param {object} state - Object allowing you to keep state across function calls.
   * Only one JavaScript function will execute at a time, so do not worry about race-conditions.
   * However, do not use this to store function arguments across onEnter/onLeave, but instead
   * use "this" which is an object for keeping state local to an invocation.
   */
  onEnter: function (log, args, state) {
    log('_ZZN3mce21SimpleResourceTrackerINSt6__ndk110shared_ptrINS_21ResourceBlockTemplateIN6nonstd8variants7variantINS5_9monostateENS_6BufferENS_21ClientResourcePointerINS_15ResourcePointerIN6dragon4mesh28ResolvedVertexBufferResourceENS3_ISD_NS_22UncheckedHandleTrackerENSB_17BufferDescriptionEEES2_EEEENS9_INSA_INSC_27ResolvedIndexBufferResourceENS3_ISJ_SE_SF_EES2_EEEENS5_6detail2TXINSN_2S4EEENSO_INSN_2S5EEENSO_INSN_2S6EEENSO_INSN_2S7EEENSO_INSN_2S8EEENSO_INSN_2S9EEENSO_INSN_3S10EEENSO_INSN_3S11EEENSO_INSN_3S12EEENSO_INSN_3S13EEENSO_INSN_3S14EEENSO_INSN_3S15EEEEENS_21PerFrameHandleTrackerESF_EEEENS1_8weak_ptrIS1F_EEE19resetValidityChecksEvENKUlRS1I_E_clES1K_()');
  },

  /**
   * Called synchronously when about to return from _ZZN3mce21SimpleResourceTrackerINSt6__ndk110shared_ptrINS_21ResourceBlockTemplateIN6nonstd8variants7variantINS5_9monostateENS_6BufferENS_21ClientResourcePointerINS_15ResourcePointerIN6dragon4mesh28ResolvedVertexBufferResourceENS3_ISD_NS_22UncheckedHandleTrackerENSB_17BufferDescriptionEEES2_EEEENS9_INSA_INSC_27ResolvedIndexBufferResourceENS3_ISJ_SE_SF_EES2_EEEENS5_6detail2TXINSN_2S4EEENSO_INSN_2S5EEENSO_INSN_2S6EEENSO_INSN_2S7EEENSO_INSN_2S8EEENSO_INSN_2S9EEENSO_INSN_3S10EEENSO_INSN_3S11EEENSO_INSN_3S12EEENSO_INSN_3S13EEENSO_INSN_3S14EEENSO_INSN_3S15EEEEENS_21PerFrameHandleTrackerESF_EEEENS1_8weak_ptrIS1F_EEE19resetValidityChecksEvENKUlRS1I_E_clES1K_.
   *
   * See onEnter for details.
   *
   * @this {object} - Object allowing you to access state stored in onEnter.
   * @param {function} log - Call this function with a string to be presented to the user.
   * @param {NativePointer} retval - Return value represented as a NativePointer object.
   * @param {object} state - Object allowing you to keep state across function calls.
   */
  onLeave: function (log, retval, state) {
  }
}
